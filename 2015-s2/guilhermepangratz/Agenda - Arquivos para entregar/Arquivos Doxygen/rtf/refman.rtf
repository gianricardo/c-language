{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 9;}
{\s50\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext51 List Continue 0;}
{\s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext52 List Continue 1;}
{\s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext53 List Continue 2;}
{\s53\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext54 List Continue 3;}
{\s54\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext55 List Continue 4;}
{\s55\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext56 List Continue 5;}
{\s56\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext57 List Continue 6;}
{\s57\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext58 List Continue 7;}
{\s58\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 8;}
{\s59\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 9;}
{\s60\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext61 DescContinue 0;}
{\s61\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext62 DescContinue 1;}
{\s62\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext63 DescContinue 2;}
{\s63\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext64 DescContinue 3;}
{\s64\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext65 DescContinue 4;}
{\s65\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext66 DescContinue 5;}
{\s66\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext67 DescContinue 6;}
{\s67\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext68 DescContinue 7;}
{\s68\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 8;}
{\s69\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 9;}
{\s70\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext81 LatexTOC 0;}
{\s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext82 LatexTOC 1;}
{\s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext83 LatexTOC 2;}
{\s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext84 LatexTOC 3;}
{\s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext85 LatexTOC 4;}
{\s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext86 LatexTOC 5;}
{\s76\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext87 LatexTOC 6;}
{\s77\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext88 LatexTOC 7;}
{\s78\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 8;}
{\s79\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 9;}
{\s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext81 \sautoupd List Bullet 0;}
{\s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid \sbasedon0 \snext82 \sautoupd List Bullet 1;}
{\s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid \sbasedon0 \snext83 \sautoupd List Bullet 2;}
{\s83\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls4\adjustright \fs20\cgrid \sbasedon0 \snext84 \sautoupd List Bullet 3;}
{\s84\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls5\adjustright \fs20\cgrid \sbasedon0 \snext85 \sautoupd List Bullet 4;}
{\s85\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls6\adjustright \fs20\cgrid \sbasedon0 \snext86 \sautoupd List Bullet 5;}
{\s86\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls7\adjustright \fs20\cgrid \sbasedon0 \snext87 \sautoupd List Bullet 6;}
{\s87\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls8\adjustright \fs20\cgrid \sbasedon0 \snext88 \sautoupd List Bullet 7;}
{\s88\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls9\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 8;}
{\s89\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls10\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 9;}
{\s90\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext91 \sautoupd List Enum 0;}
{\s91\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext92 \sautoupd List Enum 1;}
{\s92\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext93 \sautoupd List Enum 2;}
{\s93\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext94 \sautoupd List Enum 3;}
{\s94\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext95 \sautoupd List Enum 4;}
{\s95\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s96\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s97\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext98 \sautoupd List Enum 7;}
{\s98\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 8;}
{\s99\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 9;}
}
{\comment begin body}
{\info 
{\title {\comment Agenda  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1.0 \par
}}Agenda}
{\comment Gerado porDoxgyen. }
{\creatim \yr2015\mo10\dy6\hr21\min58\sec34}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt TITLE}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version 1.0\par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt CREATEDATE}}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Conte\'FAdo\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice das Estruturas de Dados\par \pard\plain 
{\tc \v \'CDndice das Estruturas de Dados}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Estruturas de Dados\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Aqui est\'E3o as estruturas de dados, uni\'F5es e suas respectivas descri\'E7\'F5es:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b s_contato} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice dos Arquivos\par \pard\plain 
{\tc \v \'CDndice dos Arquivos}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de Arquivos\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Esta \'E9 a lista de todos os arquivos e suas respectivas descri\'E7\'F5es:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b C:/Users/GuilhermeAugusto/Desktop/Agenda/{\b agenda.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/GuilhermeAugusto/Desktop/Agenda/{\b funcoes_agenda.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/GuilhermeAugusto/Desktop/Agenda/{\b funcoes_agenda.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Estruturas{\tc \v Estruturas}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura s_contato\par \pard\plain 
{\tc\tcl2 \v s_contato}
{\xe \v s_contato}
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
\par
{
{\f2 #include <funcoes_agenda.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campos de Dados\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b nome} [100]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b data} [6]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b celular} [12]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b twitter} [16]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b facebook} [30]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o Detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Structs - Todos as estruturas ser\'C3\'A3o nomeadas co m oprefixo "s_" \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campos\par
\pard\plain 
{\xe \v celular\:s_contato}
{\xe \v s_contato\:celular}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char celular[12]}}
\par
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data de aniversario no formato dd/mm \par
}}
{\xe \v data\:s_contato}
{\xe \v s_contato\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char data[6]}}
\par
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Nome, contendo at\'C3\'A9 100 caracteres \par
}}
{\xe \v facebook\:s_contato}
{\xe \v s_contato\:facebook}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char facebook[30]}}
\par
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Nickname do twitter, que possui no maximo 15 caracteres \par
}}
{\xe \v nome\:s_contato}
{\xe \v s_contato\:nome}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char nome[100]}}
\par
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v twitter\:s_contato}
{\xe \v s_contato\:twitter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char twitter[16]}}
\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
celular no formato dd-88888888 \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
C:/Users/GuilhermeAugusto/Desktop/Agenda/{\b funcoes_agenda.h}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Arquivos{\tc \v Arquivos}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/GuilhermeAugusto/Desktop/Agenda/agenda.c\par \pard\plain 
{\tc\tcl2 \v C:/Users/GuilhermeAugusto/Desktop/Agenda/agenda.c}
{\xe \v C:/Users/GuilhermeAugusto/Desktop/Agenda/agenda.c}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "funcoes_agenda.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v main\:agenda.c}
{\xe \v agenda.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main ()}}
\par
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Incluir o cabe\'C3\'A7alho que contem a estrutura para os contatos e as fun\'C3\'A7\'C3\'B5es necessarias para lidar com eles de maneira a formar uma agenda. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Inicio da fun\'C3\'A7\'C3\'A3o principal A fun\'C3\'A7\'C3\'A3o principal trata da chama das fun\'C3\'A7\'C3\'B5es de acordo com as op\'C3\'A7\'C3\'B5es oferecidas no menu, e as escolhas do usuario \par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    14            \{ \par
   15     \par
   16     s_contato contatos[SIZE];\par
   17     ler_agenda_arquivo(contatos);\par
   18     while (1) \{\par
   19         switch (menu()) \{\par
   20             case 1 :\par
   21                 cadastrar(contatos);\par
   22                 break;\par
   23             case 2 :\par
   24                 excluir_pelo_nome(contatos);\par
   25                 break;\par
   26             case 3 : \par
   27                 alterar_pelo_nome(contatos);\par
   28                 break;\par
   29             case 4 : \par
   30                 aniversariantes_data(contatos);\par
   31                 break;\par
   32             case 5 : \par
   33                 aniversariantes_mes(contatos);\par
   34                 break;\par
   35             case 6 : \par
   36                 aniversariantes_inicial(contatos);\par
   37                 break;\par
   38             case 7 : \par
   39                 mostrar_agenda_nome(contatos, 0, SIZE); \par
   40                 break;\par
   41             case 8 : \par
   42                 mostrar_agenda_mes(contatos);\par
   43                 break;\par
   44             case 9 : \par
   45                 if (gravar(contatos)) return 0;\par
   46             default : printf("entre um valor valido\\n\\n");\par
   47         \}\par
   48     \}\par
   49     \par
   50     return 0;\par
   51 \} \par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/GuilhermeAugusto/Desktop/Agenda/funcoes_agenda.c\par \pard\plain 
{\tc\tcl2 \v C:/Users/GuilhermeAugusto/Desktop/Agenda/funcoes_agenda.c}
{\xe \v C:/Users/GuilhermeAugusto/Desktop/Agenda/funcoes_agenda.c}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "funcoes_agenda.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clear} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b menu} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ler_agenda_arquivo} ({\b s_contato} vetor_agenda[{\b SIZE}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b cadastrar} ({\b s_contato} vetor_agenda[{\b SIZE}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adquirir_nome} (char nome[100])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adquirir_data} (char data[6])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adquirir_celular} (char celular[13])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adquirir_twitter} (char twitter[16])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adquirir_facebook} (char facebook[30])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b alocar_contato} ({\b s_contato} vetor_agenda[{\b SIZE}], {\b s_contato} contato)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mostrar_agenda_nome} ({\b s_contato} vetor_agenda[{\b SIZE}], int a, int b)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b gravar} ({\b s_contato} vetor_agenda[30])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b excluir_pelo_nome} ({\b s_contato} vetor_agenda[{\b SIZE}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b alterar_pelo_nome} ({\b s_contato} vetor_agenda[{\b SIZE}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b consultar_aniversariantes} ({\b s_contato} vetor_agenda[{\b SIZE}], char dia[3], char mes[3])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b aniversariantes_data} ({\b s_contato} vetor_agenda[{\b SIZE}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b aniversariantes_mes} ({\b s_contato} vetor_agenda[{\b SIZE}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b aniversariantes_inicial} ({\b s_contato} vetor_agenda[{\b SIZE}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mostrar_agenda_mes} ({\b s_contato} vetor_agenda[{\b SIZE}])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v adquirir_celular\:funcoes_agenda.c}
{\xe \v funcoes_agenda.c\:adquirir_celular}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void adquirir_celular (char  {\i celular}[13])}}
\par
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   175                                        \{ /*Adquire um numero de celualr valido e o retorna*/\par
  176     \par
  177     strcpy(celular,"");\par
  178     \par
  179     int i, check;\par
  180     \par
  181     char ddd[BUFSIZ] = "", numero[BUFSIZ];\par
  182     \par
  183     printf("\\nNUMERO TELEFONICO");\par
  184     while (1) \{\par
  185         if (!strcmp(ddd,"")) \{\par
  186             printf("\\nInforme o DDD ou ENTER para pular:");\par
  187             fgets(ddd, BUFSIZ, stdin);\par
  188             if(!strcmp(ddd,"\\n")) return;\par
  189             strtok(ddd, "\\n");\par
  190             if (!isdigit(ddd[0]) || !isdigit(ddd[1]) || ddd[2] != '\\0')\{\par
  191                 printf("\\nInforme somente os dois digitos do DDD, exemplo: 47");\par
  192                 strcpy(ddd,"");\par
  193                 continue;\par
  194             \}\par
  195         \}\par
  196         printf("\\nInforme o numero do telefone ou ENTER para pular:");\par
  197         fgets(numero, BUFSIZ, stdin);\par
  198         if(!strcmp(numero,"\\n")) return;\par
  199         strtok(numero, "\\n");\par
  200         for (i = 0; numero[i] != '\\0' ; i++) \{\par
  201             if (!isdigit(numero[i]) || i > 9) \{\par
  202                 check = 0;\par
  203                 break;\par
  204             \} else \{\par
  205                 check = 1;\par
  206             \}\par
  207         \}\par
  208         \par
  209         if (check) break;\par
  210         \par
  211     \}\par
  212     \par
  213     strcat(celular,(strcat(strcat(ddd, "-"),numero)));\par
  214 \}\par
}
}
{\xe \v adquirir_data\:funcoes_agenda.c}
{\xe \v funcoes_agenda.c\:adquirir_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void adquirir_data (char  {\i data}[6])}}
\par
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b adquirir_nome(char nome[100])}: Manipula uma string destinada a armazenar um nome de modo a preenchela de forma adequada. N\'C3\'A3o faz exigencias em rela\'C3\'A7\'C3\'A3o ao primeiro caractere do nome. Oferece a possibilidade de cancelar a entrada, preenchendo a string passada pelo parametro com um valor que sinaliza o cancelamento: "*" \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   140                                 \{ /*Adquire uma data de aniversario valida e a retorna, caso o usuario opte por pular retorna 0/0 como data*/\par
  141     \par
  142     char array_data[BUFSIZ], dia[3], mes[3];\par
  143     printf("\\nDATA DE ANIVERSARIO\\nformato dd/mm ou somente ENTER para pular: ");\par
  144         \par
  145     while (1) \{\par
  146         \par
  147         fgets(array_data, BUFSIZ, stdin);\par
  148         if(!strcmp(array_data,"\\n"))\{ //novo teste para pular\par
  149             strcpy(data, "");\par
  150             return;\par
  151         \}\par
  152         strtok(array_data, "\\n");\par
  153 /*\par
  154         if (!strcmp(array_data, "-1")) \{\par
  155             strcpy(data, "");\par
  156             break;\par
  157         \}\par
  158 */\par
  159         if ( isdigit(array_data[0]) && isdigit(array_data[1]) && array_data[2] == '/' &&\par
  160             isdigit(array_data[3]) && isdigit(array_data[4]) && array_data[5] == '\\0') \{\par
  161             \par
  162             strncpy(dia, array_data, 2);\par
  163             dia[2] = '\\0';\par
  164             strncpy(mes, array_data + 3 , 3);\par
  165             \par
  166             if (atoi(dia) > 0 && atoi(dia) < 32 && atoi(mes) > 0 && atoi(mes) < 13) \{\par
  167                 strcpy(data, array_data);\par
  168                 break;\par
  169             \}\par
  170         \}\par
  171         printf("\\npor favor, informe uma data valida dentro do formato dd/mm: ");\par
  172     \}     \par
  173 \}\par
}
}
{\xe \v adquirir_facebook\:funcoes_agenda.c}
{\xe \v funcoes_agenda.c\:adquirir_facebook}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void adquirir_facebook (char  {\i facebook}[30])}}
\par
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b adquirir_twitter(char twitter[16])}: preence twitter com um valor valido para o twitter, ou com "" se o usuario optar por pular \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   229                                          \{ /*Adquire um facebook nickname e o retorna*/\par
  230     strcpy(facebook, "");\par
  231     char buf[BUFSIZ] = "                                         ";\par
  232     printf("\\nFACEBOOK");\par
  233     while (strlen(buf) > 30)\{\par
  234         printf("\\nFacebook nick name (30 caracteres) ou apenas ENTER para pular: ");\par
  235         fgets(buf, BUFSIZ, stdin);\par
  236         if (!strcmp(buf, "\\n")) return;\par
  237         strtok(buf, "\\n");\par
  238     \}\par
  239     strcpy(facebook, buf); \par
  240 \}\par
}
}
{\xe \v adquirir_nome\:funcoes_agenda.c}
{\xe \v funcoes_agenda.c\:adquirir_nome}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void adquirir_nome (char  {\i nome}[100])}}
\par
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b cadastrar(s_contato vetor_agenda[SIZE])}: Adquire os dados do usuario (nome, data de aniversario, celular, twitter, facebook) para criar um novo contato na agenda, o unico dado obrigatorio \'C3\'A9 o nome, o resto pode ser deixado em branco seguindo as orienta\'C3\'A7\'C3\'B5es das fun\'C3\'A7\'C3\'B5es de aquisi\'C3\'A7\'C3\'A3o de dados \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   120                                   \{\par
  121     \par
  122     char buff_nome[BUFSIZ];\par
  123     printf("NOME\\n(\\"!\\" para mais informacoes ou * para cancelar)\\nInforme o nome: ");\par
  124     \par
  125     fgets(buff_nome, BUFSIZ, stdin);\par
  126     strtok(buff_nome, "\\n");\par
  127     \par
  128     while (!strcmp(buff_nome, "!") || strlen(buff_nome) > 99) \{\par
  129         printf("\\nInformar o nome eh obrigatorio;\\nEvite acentos ortograficos\\nSe e"\par
  130                 " somente se desejar cacelar insira somente \\"*\\" ( caso contrario n\'C3\'A3o "\par
  131                 "use esse caractere. Use no maximo 100 caracteres;\\n");\par
  132         printf("\\nInforme o nome (\\"!\\" para mais informacoes): ");\par
  133         fgets(buff_nome, BUFSIZ, stdin);\par
  134         strtok(nome, "\\n");\par
  135     \}\par
  136     \par
  137     strcpy(nome, buff_nome);   \par
  138 \}\par
}
}
{\xe \v adquirir_twitter\:funcoes_agenda.c}
{\xe \v funcoes_agenda.c\:adquirir_twitter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void adquirir_twitter (char  {\i twitter}[16])}}
\par
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b adquirir_celular(char celular[12])}: Manpula a string celular de mod a preenchela com um valor valido para celular ou com "" se o usuario optar por pular \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   216                                        \{ /*Adquire um twitter nickname e o retorna*/\par
  217     strcpy(twitter, "");\par
  218     char buf[BUFSIZ] = "                ";\par
  219     printf("\\nTWITTER");\par
  220     while (strlen(buf) > 15)\{\par
  221         printf("\\nTwitter nick name (15 caracteres) ou apenas ENTER para pular: ");\par
  222         fgets(buf, BUFSIZ, stdin);\par
  223         if (!strcmp(buf, "\\n")) return;\par
  224         strtok(buf, "\\n");\par
  225     \}\par
  226     strcpy(twitter, buf);    \par
  227 \}\par
}
}
{\xe \v alocar_contato\:funcoes_agenda.c}
{\xe \v funcoes_agenda.c\:alocar_contato}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void alocar_contato ({\b s_contato}  {\i vetor_agenda}[SIZE], {\b s_contato}  {\i contato})}}
\par
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b adquirir_facebook(char facebook[30])}: preenche facebook com um valor valido para o facebook ou com "" se o usuario optar por pular \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   242                                                                      \{\par
  243     int i, j;\par
  244     char temp_cont[100], temp_agenda[100];\par
  245     for ( i = SIZE - 1; i > 0 ; i-- ) \{\par
  246         strcpy(temp_cont, contato.nome);\par
  247         strcpy(temp_agenda, vetor_agenda[i-1].nome);\par
  248         for (j = 0; j < strlen(temp_cont); j++)\{\par
  249             if (isalpha(temp_cont[j]) && islower(temp_cont[j]))\{\par
  250                 temp_cont[j] = toupper(temp_cont[j]);\par
  251                 temp_agenda[j] = toupper(temp_agenda[j]);\par
  252             \}\par
  253         \}\par
  254         if (strcmp(temp_cont, temp_agenda) >= 0 && strcmp(temp_agenda, "")) \{\par
  255             vetor_agenda[i] = contato;\par
  256             break;\par
  257         \}        \par
  258         vetor_agenda[i] = vetor_agenda[i-1];\par
  259     \}\par
  260     \par
  261     if (i == 0) \{\par
  262         vetor_agenda[i] = contato;\par
  263     \}\par
  264     \par
  265 \}\par
}
}
{\xe \v alterar_pelo_nome\:funcoes_agenda.c}
{\xe \v funcoes_agenda.c\:alterar_pelo_nome}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void alterar_pelo_nome ({\b s_contato}  {\i vetor_agenda}[SIZE])}}
\par
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b excluir_pelo_nome(s_contato vetor_agenda[SIZE])}: Fun\'C3\'A7\'C3\'A3o para excluir um contato a partir do nome. seguindo o nome fornecido pelo usuario ela fornece quais as possibilidade de exclus\'C3\'A3o, o usuario pode ent\'C3\'A3o optar por cancelar, excluir todas as entradas compativeis, ou s\'C3\'B3 a desejada \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   391                                                      \{\par
  392     printf("Alterar dados a partir do nome:\\n");\par
  393     int teste, i, chave_i = -1, chave_j = -1, q = 0;\par
  394     char buf_nome[100];\par
  395     adquirir_nome(buf_nome);\par
  396     if (!strcmp(buf_nome, "*")) return;\par
  397     for (i = 0; i < SIZE; i++) \{\par
  398         if (!strcmp(buf_nome,vetor_agenda[i].nome)) \{\par
  399             if (chave_i == -1) \{\par
  400                 chave_i = i;\par
  401                 chave_j = i;\par
  402             \}\par
  403             if (chave_i != -1) chave_j = i;\par
  404             q++;\par
  405         \}\par
  406     \}\par
  407     printf("\\n%d entradas correspondentes:\\n", q);\par
  408     \par
  409     if (q > 0) \{\par
  410         mostrar_agenda_nome(vetor_agenda, chave_i, chave_j+1);\par
  411     \} else \{\par
  412         printf("\\nNenhum contato correspondente para ser editado!\\n");\par
  413         return;\par
  414     \}\par
  415     char opcao[BUFSIZ];\par
  416     while(1)\{\par
  417         teste = 0;\par
  418         printf("-> -1 para cancelar\\n"\par
  419             "-> maior que zero para editar o contato indicado (EX:"\par
  420             " 1 para editar o primeiro contato correspondente)\\nOpcao desejada: ");\par
  421         fgets(opcao, BUFSIZ, stdin);\par
  422         strtok(opcao, "\\n");\par
  423         i = 0;\par
  424         if (!strcmp(opcao, "-1"))\{\par
  425             printf("CANCELADO\\n\\n");\par
  426             return;\par
  427         \}\par
  428         while (opcao[i] != '\\0') \{\par
  429             if(!isdigit(opcao[i]))\{\par
  430                 printf("OPCAO INVALIDA!\\n");\par
  431                 teste = 1;\par
  432                 break;\par
  433             \}\par
  434             i++;\par
  435         \}\par
  436         if (teste) continue;\par
  437         if (atoi(opcao) >= -1 && atoi(opcao) != 0 && atoi(opcao) <= q) break;\par
  438         printf("%d", atoi(opcao));\par
  439         printf("OPCAO INVALIDA!\\n");\par
  440     \}\par
  441     \par
  442     chave_i += atoi(opcao) - 1;\par
  443     char alterar[BUFSIZ];\par
  444     s_contato hold;\par
  445     \par
  446     printf("\\nAlterar o nome?\\n"\par
  447            "somente ENTER para alterar; qualquer outra entrada para manter: ");\par
  448     if(!strcmp(fgets(alterar, BUFSIZ, stdin), "\\n")) \{\par
  449         adquirir_nome(hold.nome);\par
  450         if (!strcmp(hold.nome, "*")) \{ \par
  451             printf("\\nalteracao cancelada\\n");\par
  452             return;\par
  453         \}\par
  454         strcpy(vetor_agenda[chave_i].nome, hold.nome);\par
  455     \}\par
  456     printf("\\nAlterar data de aniversario?\\n"\par
  457            "somente ENTER para alterar; qualquer outra entrada para manter: ");\par
  458     if(!strcmp(fgets(alterar, BUFSIZ, stdin), "\\n")) \{\par
  459         adquirir_data(hold.data);\par
  460         strcpy(vetor_agenda[chave_i].data, hold.data);\par
  461     \}\par
  462     printf("\\nAlterar o celular?\\n"\par
  463            "somente ENTER para alterar; qualquer outra entrada para manter: ");\par
  464     if(!strcmp(fgets(alterar, BUFSIZ, stdin), "\\n")) \{\par
  465         adquirir_celular(hold.celular);\par
  466         strcpy(vetor_agenda[chave_i].celular, hold.celular);\par
  467     \}\par
  468     printf("\\nAlterar o Twitter?\\n"\par
  469            "somente ENTER para alterar; qualquer outra entrada para manter: ");\par
  470     if(!strcmp(fgets(alterar, BUFSIZ, stdin), "\\n")) \{\par
  471         adquirir_celular(hold.twitter);\par
  472         strcpy(vetor_agenda[chave_i].twitter, hold.twitter);\par
  473     \}\par
  474     printf("\\nAlterar o Facebook?\\n"\par
  475            "somente ENTER para alterar; qualquer outra entrada para manter: ");\par
  476     if(!strcmp(fgets(alterar, BUFSIZ, stdin), "\\n")) \{\par
  477         adquirir_celular(hold.facebook);\par
  478         strcpy(vetor_agenda[chave_i].facebook, hold.facebook);\par
  479     \}\par
  480     //agrupar as altera\'C3\'A7\'C3\'B5es em u mrepositorio\par
  481     strcpy(hold.nome, vetor_agenda[chave_i].nome);\par
  482     strcpy(hold.data, vetor_agenda[chave_i].data);\par
  483     strcpy(hold.celular, vetor_agenda[chave_i].celular);\par
  484     strcpy(hold.twitter, vetor_agenda[chave_i].twitter);\par
  485     strcpy(hold.facebook, vetor_agenda[chave_i].facebook);\par
  486     \par
  487     //apagar o contato alterado da agenda para que ele seja reinserido no local correto\par
  488     for (i = chave_i; (i < SIZE - 1) && strcmp(vetor_agenda[i].nome, "") ; i++) \{\par
  489         strcpy(vetor_agenda[i].nome, vetor_agenda[i + 1].nome);\par
  490         strcpy(vetor_agenda[i].data, vetor_agenda[i + 1].data);\par
  491         strcpy(vetor_agenda[i].celular, vetor_agenda[i + 1].celular);\par
  492         strcpy(vetor_agenda[i].facebook, vetor_agenda[i + 1].facebook);\par
  493         strcpy(vetor_agenda[i].twitter, vetor_agenda[i + 1].twitter);\par
  494     \}\par
  495     strcpy(vetor_agenda[SIZE - 1].nome, "");\par
  496     strcpy(vetor_agenda[SIZE - 1].data, "");\par
  497     strcpy(vetor_agenda[SIZE - 1].celular, "");\par
  498     strcpy(vetor_agenda[SIZE - 1].facebook, "");\par
  499     strcpy(vetor_agenda[SIZE - 1].twitter, "");\par
  500     printf("\\n");\par
  501 \par
  502     //realocar  o contato\par
  503     alocar_contato(vetor_agenda, hold);\par
  504     \par
  505 \}\par
}
}
{\xe \v aniversariantes_data\:funcoes_agenda.c}
{\xe \v funcoes_agenda.c\:aniversariantes_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void aniversariantes_data ({\b s_contato}  {\i vetor_agenda}[SIZE])}}
\par
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b consultar_aniversariantes(s_contato vetor_agenda[SIZE], char dia[3], char mes[3])}: Exibe os aniversariantes do dia e mes desejado ou somente do mes se o dia informado for for "00" \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   521                                                         \{\par
  522     printf("Consultar aniversariantes de uma data (dia/mes)\\n");\par
  523     char data[6] = "";\par
  524     adquirir_data(data);\par
  525     if (!strcmp(data, "")) \{\par
  526         printf("\\nConsulta cancelada!\\n");\par
  527         return;\par
  528     \}\par
  529     char dia[3], mes[3];\par
  530     strncpy(dia, data, 2);\par
  531     dia[2] = '\\0';\par
  532     strcpy(mes, data + 3);\par
  533     \par
  534     printf("\\nAniversariantes do dia %s:\\n", data);\par
  535     \par
  536     consultar_aniversariantes(vetor_agenda, dia, mes);\par
  537     \par
  538 \}\par
}
}
{\xe \v aniversariantes_inicial\:funcoes_agenda.c}
{\xe \v funcoes_agenda.c\:aniversariantes_inicial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void aniversariantes_inicial ({\b s_contato}  {\i vetor_agenda}[SIZE])}}
\par
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b aniversariantes_mes(s_contato vetor_agenda[SIZE])}: Consulta os aniversariantes de um m\'C3\'AAs no formato mm, obtendo o m\'C3\'AAs do usuario e usando na fun\'C3\'A7\'C3\'A3o void {\b consultar_aniversariantes(s_contato vetor_agenda[SIZE], char dia[3], char mes[3])} com dia = "00" \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   552                                                            \{\par
  553     int i, qaniver = 0;\par
  554     char inicial[BUFSIZ], chave1, chave2;\par
  555     printf("Consultar aniversariantes pela letra inicial do nome\\n\\n"\par
  556             "Informe um caractere para procurar como inicial, ou qualquer outra entrada para sair: ");\par
  557     fgets(inicial, BUFSIZ, stdin);\par
  558     strtok(inicial, "\\n");\par
  559     if (strlen(inicial) == 1) \{\par
  560         chave1 = toupper(inicial[0]);\par
  561         for (i = 0; i < SIZE; i++) \{\par
  562             chave2 = toupper(vetor_agenda[i].nome[0]);\par
  563             if (chave1 == chave2) \{\par
  564                 qaniver++;\par
  565                 printf("\\n%s - %s", vetor_agenda[i].nome, vetor_agenda[i].data);\par
  566                 if (!strcmp(vetor_agenda[i].data, "")) printf("data de anviersario desconhecida");\par
  567             \}\par
  568         \}\par
  569         printf("\\n\\n%d entradas correspondentes\\n\\n", qaniver);\par
  570     \}\par
  571 \}\par
}
}
{\xe \v aniversariantes_mes\:funcoes_agenda.c}
{\xe \v funcoes_agenda.c\:aniversariantes_mes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void aniversariantes_mes ({\b s_contato}  {\i vetor_agenda}[SIZE])}}
\par
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b aniversariantes_data(s_contato vetor_agenda[SIZE])}: Consulta os aniversariantes de uma data no formato dd/mm, obtendo a data do usuario e usando na fun\'C3\'A7\'C3\'A3o void {\b consultar_aniversariantes(s_contato vetor_agenda[SIZE], char dia[3], char mes[3])} \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   540                                                        \{\par
  541     char mes[BUFSIZ];\par
  542     printf("Consultar aniversariantes por mes\\n\\nInforme o mes no formato mm "\par
  543             "(ex: 05)\\nou qualquer outra entrada para cancelar:");\par
  544     fgets(mes, BUFSIZ, stdin);\par
  545     strtok(mes, "\\n");\par
  546     if (isdigit(mes[0]) && isdigit(mes[1]) && mes[2] == '\\0' && atoi(mes) > 0 && atoi(mes) < 13) \{\par
  547         printf("\\nAniversariantes do mes:\\n");\par
  548         consultar_aniversariantes(vetor_agenda, "00", mes);\par
  549     \}\par
  550 \}\par
}
}
{\xe \v cadastrar\:funcoes_agenda.c}
{\xe \v funcoes_agenda.c\:cadastrar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void cadastrar ({\b s_contato}  {\i vetor_agenda}[SIZE])}}
\par
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void ler_agenda(s_contato vetor_agenda[SIZE]) que l\'C3\'AA o arquivo contendo os dados da agenda e manipula o vetor de contatos passado como referencia de forma a preenche-lo com os dados armazenados no txt da agenda. Se o arquivo agenda.txt ainda n\'C3\'A3o existir, preenche os elementos do vetor de contatos com "" \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    85                                             \{\par
   86     printf("Cadastrar pessoa na agenda de contatos\\n\\n");\par
   87     if (strcmp(vetor_agenda[SIZE - 1].nome, "")) \{\par
   88         printf("A agenda est\'C3\'A1 cheia\\n\\n");\par
   89     \} else \{\par
   90         s_contato hold;\par
   91         adquirir_nome(hold.nome);\par
   92         if (!strcmp(hold.nome, "*")) \{ return;\}\par
   93         adquirir_data(hold.data);\par
   94         adquirir_celular(hold.celular);\par
   95         adquirir_twitter(hold.twitter);\par
   96         adquirir_facebook(hold.facebook);\par
   97         \par
   98         printf("\\nDados Recebidos:\\n");\par
   99         printf("nome -> %s\\n", hold.nome);\par
  100         printf("data de aniversario -> %s\\n", hold.data);\par
  101         printf("celular -> %s\\n", hold.celular);\par
  102         printf("twitter -> %s\\n", hold.twitter);\par
  103         printf("facebook -> %s\\n", hold.facebook);\par
  104         \par
  105         char confirmar[BUFSIZ];\par
  106         printf("Enter para confirmar (Qualquer outra entrada para cancelar): ");\par
  107         fgets(confirmar, BUFSIZ, stdin);\par
  108         if (strcmp(confirmar, "\\n"))\{\par
  109             printf("CANCELADO!\\n\\n");\par
  110             return;\par
  111         \}\par
  112         printf("CONFIRMADO!\\n\\n");\par
  113         \par
  114         alocar_contato(vetor_agenda, hold);\par
  115         \par
  116         \par
  117     \}\par
  118 \}\par
}
}
{\xe \v clear\:funcoes_agenda.c}
{\xe \v funcoes_agenda.c\:clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void clear (void )}}
\par
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b s_contato} - Armazena os dados dos contatos Prot\'C3\'B3tipos das Fun\'C3\'A7\'C3\'B5es \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     4                   \{    \par
    5   while ( getchar() != '\\n' );\par
    6 \}\par
}
}
{\xe \v consultar_aniversariantes\:funcoes_agenda.c}
{\xe \v funcoes_agenda.c\:consultar_aniversariantes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void consultar_aniversariantes ({\b s_contato}  {\i vetor_agenda}[SIZE], char  {\i dia}[3], char  {\i mes}[3])}}
\par
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b alterar_pelo_nome(s_contato vetor_agenda[SIZE])}: Fun\'C3\'A7\'C3\'A3o para editar um contato a partir do nome. seguindo o nome fornecido pelo usuario ela fornece quais as possibilidade de edi\'C3\'A7\'C3\'A3o, o usuario pode ent\'C3\'A3o optar por cancelar ou editar somente a entrada desejada. A edi\'C3\'A7\'C3\'A3o permite que o usuario altere apenas as partes que quiser alterar do contato escolhido \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   507                                                                                        \{\par
  508     int i, qaniver = 0;\par
  509     int dia_switch;\par
  510     if (!strcmp(dia, "00")) dia_switch = 1; // TRUE\par
  511     for (i=0; i<SIZE; i++) \{\par
  512         if ( (!strncmp(vetor_agenda[i].data,dia,2) || dia_switch) && !strcmp(vetor_agenda[i].data + 3, mes)) \{\par
  513             qaniver++;\par
  514             printf("\\n%s\\n%s | %s | %s | %s\\n", vetor_agenda[i].nome, vetor_agenda[i].data,\par
  515                 vetor_agenda[i].celular, vetor_agenda[i].twitter, vetor_agenda[i].facebook);\par
  516         \}\par
  517     \}\par
  518     printf("\\n%d aniversariantes correspondentes\\n\\n", qaniver);\par
  519 \}\par
}
}
{\xe \v excluir_pelo_nome\:funcoes_agenda.c}
{\xe \v funcoes_agenda.c\:excluir_pelo_nome}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void excluir_pelo_nome ({\b s_contato}  {\i vetor_agenda}[SIZE])}}
\par
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
int {\b gravar(s_contato vetor_agenda[SIZE])}: grava os dados do vetor de contatos em um arquivo chamado de agenda.txt, de forma compativel co ma fun\'C3\'A7\'C3\'A3o de leitura void {\b ler_agenda_arquivo(s_contato vetor_agenda[SIZE])} \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   304                                                     \{\par
  305     printf("\\n\\nExcluir pessoa a partir do nome:\\n");\par
  306     int teste, i, chave_i = -1, chave_j = -1, q = 0;\par
  307     char buf_nome[100];\par
  308     adquirir_nome(buf_nome);\par
  309     if (!strcmp(buf_nome, "*")) return;\par
  310     for (i = 0; i < SIZE; i++) \{\par
  311         if (!strcmp(buf_nome,vetor_agenda[i].nome)) \{\par
  312             if (chave_i == -1) \{\par
  313                 chave_i = i;\par
  314                 chave_j = i;\par
  315             \}\par
  316             if (chave_i != -1) chave_j = i;\par
  317             q++;\par
  318         \}\par
  319     \}\par
  320     printf("\\n%d entradas correspondentes:\\n", q);\par
  321     \par
  322     if (q > 0) \{\par
  323         mostrar_agenda_nome(vetor_agenda, chave_i, chave_j+1);\par
  324     \} else \{\par
  325         printf("\\nNenhum contato correspondente para ser apagado!\\n");\par
  326         return;\par
  327     \}\par
  328     char opcao[BUFSIZ];\par
  329     while(1)\{\par
  330         teste = 0;\par
  331         printf("\\n-> -1 para cancelar\\n"\par
  332             "-> 0 para apagar todas as entradas correspondentes\\n"\par
  333             "-> maior que zero para apagar o contato correspondente desejado (EX: 1 para apaagr o primeiro contato com nome igual)\\n"\par
  334             "Opcao desejada: ");\par
  335         fgets(opcao, BUFSIZ, stdin);\par
  336         strtok(opcao, "\\n");\par
  337         i = 0;\par
  338         if (!strcmp(opcao, "-1"))\{\par
  339             printf("CANCELADO\\n\\n");\par
  340             return;\par
  341         \}\par
  342         while (opcao[i] != '\\0') \{\par
  343             if(!isdigit(opcao[i]))\{\par
  344                 printf("OPCAO INVALIDA!\\n");\par
  345                 teste = 1;\par
  346                 break;\par
  347             \}\par
  348             i++;\par
  349         \}\par
  350         if (teste) continue;\par
  351         if (atoi(opcao) >= -1 && atoi(opcao) <= q) break;\par
  352         printf("%d", atoi(opcao));\par
  353         printf("OPCAO INVALIDA!\\n");\par
  354     \}\par
  355     \par
  356     printf("\\n");\par
  357 \par
  358     if (atoi(opcao) > 0) \{\par
  359         chave_i += atoi(opcao) - 1;\par
  360         for (i = chave_i; (i < SIZE - 1) && strcmp(vetor_agenda[i].nome, "") ; i++) \{\par
  361             strcpy(vetor_agenda[i].nome, vetor_agenda[i + 1].nome);\par
  362             strcpy(vetor_agenda[i].data, vetor_agenda[i + 1].data);\par
  363             strcpy(vetor_agenda[i].celular, vetor_agenda[i + 1].celular);\par
  364             strcpy(vetor_agenda[i].facebook, vetor_agenda[i + 1].facebook);\par
  365             strcpy(vetor_agenda[i].twitter, vetor_agenda[i + 1].twitter);\par
  366         \}\par
  367         strcpy(vetor_agenda[SIZE - 1].nome, "");\par
  368         strcpy(vetor_agenda[SIZE - 1].data, "");\par
  369         strcpy(vetor_agenda[SIZE - 1].celular, "");\par
  370         strcpy(vetor_agenda[SIZE - 1].facebook, "");\par
  371         strcpy(vetor_agenda[SIZE - 1].twitter, "");\par
  372     \} else if (atoi(opcao) == 0) \{\par
  373         for (i = chave_i; (i < SIZE - q) && strcmp(vetor_agenda[i].nome, "") ; i++) \{\par
  374             strcpy(vetor_agenda[i].nome, vetor_agenda[i + q].nome);\par
  375             strcpy(vetor_agenda[i].data, vetor_agenda[i + q].data);\par
  376             strcpy(vetor_agenda[i].celular, vetor_agenda[i + q].celular);\par
  377             strcpy(vetor_agenda[i].facebook, vetor_agenda[i + q].facebook);\par
  378             strcpy(vetor_agenda[i].twitter, vetor_agenda[i + q].twitter);\par
  379         \}\par
  380         for (i = SIZE - 1; i > SIZE - 1 - q; i--) \{\par
  381             strcpy(vetor_agenda[SIZE - 1].nome, "");\par
  382             strcpy(vetor_agenda[SIZE - 1].data, "");\par
  383             strcpy(vetor_agenda[SIZE - 1].celular, "");\par
  384             strcpy(vetor_agenda[SIZE - 1].facebook, "");\par
  385             strcpy(vetor_agenda[SIZE - 1].twitter, "");\par
  386         \}\par
  387     \}\par
  388     \par
  389 \}\par
}
}
{\xe \v gravar\:funcoes_agenda.c}
{\xe \v funcoes_agenda.c\:gravar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int gravar ({\b s_contato}  {\i vetor_agenda}[30])}}
\par
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   278                                        \{\par
  279     \par
  280     int contador;\par
  281     FILE *fPtr;\par
  282     \par
  283     if ( ( fPtr = fopen("agenda.txt", "w") ) == NULL) \{ \par
  284         printf("\\nNao foi possivel salvar as alteracoes! Aperte enter para sair "\par
  285                 "sem salvar, qualquer outra entrada para voltar: ");\par
  286         char sair[BUFSIZ];\par
  287         fgets(sair, BUFSIZ, stdin);\par
  288         if (strcmp(sair, "\\n")) \{\par
  289             return 0;\par
  290         \}\par
  291     \} else \{\par
  292         for (contador = 0; contador < SIZE && strcmp(vetor_agenda[contador].nome, ""); contador++) \{\par
  293             fprintf(fPtr, "%s\\n%s\\n%s\\n%s\\n%s\\n", \par
  294                     &vetor_agenda[contador].nome ,\par
  295                     &vetor_agenda[contador].data,\par
  296                     &vetor_agenda[contador].celular ,\par
  297                     &vetor_agenda[contador].twitter,\par
  298                     &vetor_agenda[contador].facebook);\par
  299         \}\par
  300     \}\par
  301     return 1;\par
  302 \}\par
}
}
{\xe \v ler_agenda_arquivo\:funcoes_agenda.c}
{\xe \v funcoes_agenda.c\:ler_agenda_arquivo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ler_agenda_arquivo ({\b s_contato}  {\i vetor_agenda}[SIZE])}}
\par
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
int {\b menu()}: que oferece o menu e pede que seja escolhida uma op\'C3\'A7\'C3\'A3o, retorna um inteiro equivalente a op\'C3\'A3o escolhida se a entrada for coerente com as op\'C3\'A7\'C3\'B5es, caso contrario retorna 0 \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    35                                                      \{\par
   36     int i, contador = 0;\par
   37     FILE *fPtr;\par
   38     if ( ( fPtr = fopen("agenda.txt", "r") ) == NULL) \{\par
   39         printf("N\'C3\'A3o foi poss\'C3\'ADvel abrir o arquivo da agenda, ou ela est\'C3\'A1 vazia!\\n\\n");\par
   40         for (i = 0; i < SIZE; i++) \{\par
   41             strcpy(vetor_agenda[i].nome, "");\par
   42             strcpy(vetor_agenda[i].data, "");\par
   43             strcpy(vetor_agenda[i].celular, "");\par
   44             strcpy(vetor_agenda[i].facebook, "");\par
   45             strcpy(vetor_agenda[i].twitter, "");\par
   46         \}\par
   47     \} else \{\par
   48         char segura_linha[170];\par
   49         while (!feof(fPtr)) \{\par
   50             fgets(segura_linha, 100, fPtr);\par
   51             strtok(segura_linha, "\\n");\par
   52             strcpy(vetor_agenda[contador].nome, segura_linha);\par
   53             fgets(segura_linha, 100, fPtr);\par
   54             if(!strcmp(segura_linha,"\\n")) strcpy(segura_linha,"");\par
   55             else strtok(segura_linha, "\\n");\par
   56             strcpy(vetor_agenda[contador].data, segura_linha);\par
   57             fgets(segura_linha, 100, fPtr);\par
   58             if(!strcmp(segura_linha,"\\n")) strcpy(segura_linha,"");\par
   59             else strtok(segura_linha, "\\n");\par
   60             strcpy(vetor_agenda[contador].celular, segura_linha); \par
   61             fgets(segura_linha, 100, fPtr);\par
   62             if(!strcmp(segura_linha,"\\n")) strcpy(segura_linha,"");\par
   63             else strtok(segura_linha, "\\n");\par
   64             strcpy(vetor_agenda[contador].twitter, segura_linha);\par
   65             fgets(segura_linha, 100, fPtr);\par
   66             if(!strcmp(segura_linha,"\\n")) strcpy(segura_linha,"");\par
   67             else strtok(segura_linha, "\\n");\par
   68             strcpy(vetor_agenda[contador].facebook, segura_linha);\par
   69             strcpy(segura_linha, "");\par
   70             contador += 1;\par
   71             \par
   72 \par
   73         \}\par
   74         for (i = contador + 1; i < SIZE; i++) \{\par
   75             strcpy(vetor_agenda[i].nome, "");\par
   76             strcpy(vetor_agenda[i].data, "");\par
   77             strcpy(vetor_agenda[i].celular, "");\par
   78             strcpy(vetor_agenda[i].facebook, "");\par
   79             strcpy(vetor_agenda[i].twitter, "");\par
   80         \} \par
   81     \}\par
   82     fclose(fPtr);\par
   83 \}\par
}
}
{\xe \v menu\:funcoes_agenda.c}
{\xe \v funcoes_agenda.c\:menu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int menu ()}}
\par
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b clear(void)}: limpa o buffer da stdin ap\'C3\'B3s o uso de um scanf, acabou n\'C3\'A3o sendo usada \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     8           \{\par
    9     \par
   10     int valor;\par
   11     \par
   12     printf("-----------------------------------------------------------------------------------------------------\\n"\par
   13             "MENU:\\n"\par
   14             "1 - Cadastrar pessoa na agenda de contato (Nome, Dia de aniversario, Celular, Twitter e facebook)\\n"\par
   15             "2 - Excluir pessoa a partir do nome\\n"\par
   16             "3 - Alterar dados a partir do nome\\n"\par
   17             "4 - Consultar aniversariantes de uma data (dia e m\'C3\'AAs)\\n"\par
   18             "5 - Consultar aniversariantes por mes\\n"\par
   19             "6 - Consultar aniversariantes pela letra inicial do nome\\n"\par
   20             "7 - Mostrar toda a agenda ordenada pelo nome\\n"\par
   21             "8 - Mostrar toda a agenda ordenada por mes\\n"\par
   22             "9 - Sair\\n"\par
   23             "\\nOpcao desejada: ");\par
   24     \par
   25     char buf_opcao[BUFSIZ];\par
   26     fgets(buf_opcao, BUFSIZ, stdin);\par
   27     strtok(buf_opcao, "\\n");\par
   28     \par
   29     printf("----------------------------------------------------------------------------------------------------\\n\\n");\par
   30     \par
   31     if (strlen(buf_opcao) == 1) return (buf_opcao[0] - '0');\par
   32     else return 0;\par
   33 \}\par
}
}
{\xe \v mostrar_agenda_mes\:funcoes_agenda.c}
{\xe \v funcoes_agenda.c\:mostrar_agenda_mes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mostrar_agenda_mes ({\b s_contato}  {\i vetor_agenda}[SIZE])}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b aniversariantes_inicial(s_contato vetor_agenda[SIZE])}: Pede ao usuario uma inicial e exibe todos os nomes que come\'C3\'A7am naquela inicial junto as suas respectivas datas de aniversarios, e avisa se as datas forem desconhecidas \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   573                                                       \{\par
  574     \par
  575     s_contato temp[SIZE],hold;\par
  576     int i, j, key1, key2;\par
  577     \par
  578     for (i = 0; i < SIZE; i++ ) \{\par
  579         temp[i] = vetor_agenda[i];\par
  580     \}\par
  581     for (i = 0; i < SIZE - 1; i++) \{\par
  582         for ( j = 0 ; j < SIZE - 1 - i; j++) \{\par
  583             key1 = atoi(temp[j].data + 3);\par
  584             key2 = atoi(temp[j+1].data + 3);\par
  585             if (key2 < key1) \{\par
  586                 hold = temp[j];\par
  587                 temp[j] = temp[j+1];\par
  588                 temp[j+1] = hold;\par
  589             \}\par
  590         \}\par
  591     \}\par
  592     for (i = 0; i < SIZE; i++) \{\par
  593         if (strcmp(temp[i].nome,"")) \{\par
  594             printf("\\n%s\\n%s | %s | %s | %s\\n", temp[i].nome, temp[i].data,\par
  595                     temp[i].celular, temp[i].twitter, temp[i].facebook);\par
  596         \}\par
  597     \}\par
  598 \}}
}
{\xe \v mostrar_agenda_nome\:funcoes_agenda.c}
{\xe \v funcoes_agenda.c\:mostrar_agenda_nome}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mostrar_agenda_nome ({\b s_contato}  {\i vetor_agenda}[SIZE], int  {\i a}, int  {\i b})}}
\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b alocar_contato(s_contato vetor_agenda[SIZE], s_contato contato)}: Aloca contato na sua devida posi\'C3\'A7\'C3\'A3o lexica dentro de vetor-agenda; Comportamento indefinido caso vetor_agenda ja esteja cheia \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   267                                                                     \{\par
  268     int i;\par
  269     printf("\\nAgenda ordenada pelo nome\\n\\n"\par
  270             "Nome\\ndata de aniversario - celular - twitter - facebook\\n");\par
  271     for (i = a; i < b && strcmp(vetor_agenda[i].nome, ""); i++)\{\par
  272         printf("\\n%s\\n%s | %s | %s | %s\\n", vetor_agenda[i].nome, vetor_agenda[i].data,\par
  273                 vetor_agenda[i].celular, vetor_agenda[i].twitter, vetor_agenda[i].facebook);\par
  274     \}\par
  275     printf("\\n");\par
  276 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo C:/Users/GuilhermeAugusto/Desktop/Agenda/funcoes_agenda.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/GuilhermeAugusto/Desktop/Agenda/funcoes_agenda.h}
{\xe \v C:/Users/GuilhermeAugusto/Desktop/Agenda/funcoes_agenda.h}
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include <ctype.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Estruturas de Dados\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b s_contato}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SIZE}\~ 30 /**Tamanho do vetor agenda*/\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clear} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b menu} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ler_agenda_arquivo} ({\b s_contato} vetor_agenda[{\b SIZE}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b cadastrar} ({\b s_contato} vetor_agenda[{\b SIZE}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adquirir_nome} (char nome[100])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adquirir_data} (char data[6])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adquirir_celular} (char celular[12])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adquirir_twitter} (char twitter[16])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adquirir_facebook} (char facebook[30])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b alocar_contato} ({\b s_contato} vetor_agenda[{\b SIZE}], {\b s_contato} contato)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mostrar_agenda_nome} ({\b s_contato} vetor_agenda[{\b SIZE}], int a, int b)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b gravar} ({\b s_contato} vetor_agenda[{\b SIZE}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b excluir_pelo_nome} ({\b s_contato} vetor_agenda[{\b SIZE}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b alterar_pelo_nome} ({\b s_contato} vetor_agenda[{\b SIZE}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b consultar_aniversariantes} ({\b s_contato} vetor_agenda[{\b SIZE}], char dia[3], char mes[3])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b aniversariantes_data} ({\b s_contato} vetor_agenda[{\b SIZE}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b aniversariantes_mes} ({\b s_contato} vetor_agenda[{\b SIZE}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b aniversariantes_inicial} ({\b s_contato} vetor_agenda[{\b SIZE}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mostrar_agenda_mes} ({\b s_contato} vetor_agenda[{\b SIZE}])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v SIZE\:funcoes_agenda.h}
{\xe \v funcoes_agenda.h\:SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SIZE\~ 30 /**Tamanho do vetor agenda*/}}
\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cabe\'C3\'A7alhos das bibliotecas utilizadas; \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v adquirir_celular\:funcoes_agenda.h}
{\xe \v funcoes_agenda.h\:adquirir_celular}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void adquirir_celular (char  {\i celular}[12])}}
\par
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b adquirir_data(char data[6])}: Manipula a string de parametro data de forma a encerrar a execu\'C3\'A7\'C3\'A3o com ela contendo uma data valida ou "" se o usuario optar por pular \par
}}
{\xe \v adquirir_data\:funcoes_agenda.h}
{\xe \v funcoes_agenda.h\:adquirir_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void adquirir_data (char  {\i data}[6])}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b adquirir_nome(char nome[100])}: Manipula uma string destinada a armazenar um nome de modo a preenchela de forma adequada. N\'C3\'A3o faz exigencias em rela\'C3\'A7\'C3\'A3o ao primeiro caractere do nome. Oferece a possibilidade de cancelar a entrada, preenchendo a string passada pelo parametro com um valor que sinaliza o cancelamento: "*" \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   140                                 \{ /*Adquire uma data de aniversario valida e a retorna, caso o usuario opte por pular retorna 0/0 como data*/\par
  141     \par
  142     char array_data[BUFSIZ], dia[3], mes[3];\par
  143     printf("\\nDATA DE ANIVERSARIO\\nformato dd/mm ou somente ENTER para pular: ");\par
  144         \par
  145     while (1) \{\par
  146         \par
  147         fgets(array_data, BUFSIZ, stdin);\par
  148         if(!strcmp(array_data,"\\n"))\{ //novo teste para pular\par
  149             strcpy(data, "");\par
  150             return;\par
  151         \}\par
  152         strtok(array_data, "\\n");\par
  153 /*\par
  154         if (!strcmp(array_data, "-1")) \{\par
  155             strcpy(data, "");\par
  156             break;\par
  157         \}\par
  158 */\par
  159         if ( isdigit(array_data[0]) && isdigit(array_data[1]) && array_data[2] == '/' &&\par
  160             isdigit(array_data[3]) && isdigit(array_data[4]) && array_data[5] == '\\0') \{\par
  161             \par
  162             strncpy(dia, array_data, 2);\par
  163             dia[2] = '\\0';\par
  164             strncpy(mes, array_data + 3 , 3);\par
  165             \par
  166             if (atoi(dia) > 0 && atoi(dia) < 32 && atoi(mes) > 0 && atoi(mes) < 13) \{\par
  167                 strcpy(data, array_data);\par
  168                 break;\par
  169             \}\par
  170         \}\par
  171         printf("\\npor favor, informe uma data valida dentro do formato dd/mm: ");\par
  172     \}     \par
  173 \}\par
}
}
{\xe \v adquirir_facebook\:funcoes_agenda.h}
{\xe \v funcoes_agenda.h\:adquirir_facebook}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void adquirir_facebook (char  {\i facebook}[30])}}
\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b adquirir_twitter(char twitter[16])}: preence twitter com um valor valido para o twitter, ou com "" se o usuario optar por pular \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   229                                          \{ /*Adquire um facebook nickname e o retorna*/\par
  230     strcpy(facebook, "");\par
  231     char buf[BUFSIZ] = "                                         ";\par
  232     printf("\\nFACEBOOK");\par
  233     while (strlen(buf) > 30)\{\par
  234         printf("\\nFacebook nick name (30 caracteres) ou apenas ENTER para pular: ");\par
  235         fgets(buf, BUFSIZ, stdin);\par
  236         if (!strcmp(buf, "\\n")) return;\par
  237         strtok(buf, "\\n");\par
  238     \}\par
  239     strcpy(facebook, buf); \par
  240 \}\par
}
}
{\xe \v adquirir_nome\:funcoes_agenda.h}
{\xe \v funcoes_agenda.h\:adquirir_nome}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void adquirir_nome (char  {\i nome}[100])}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b cadastrar(s_contato vetor_agenda[SIZE])}: Adquire os dados do usuario (nome, data de aniversario, celular, twitter, facebook) para criar um novo contato na agenda, o unico dado obrigatorio \'C3\'A9 o nome, o resto pode ser deixado em branco seguindo as orienta\'C3\'A7\'C3\'B5es das fun\'C3\'A7\'C3\'B5es de aquisi\'C3\'A7\'C3\'A3o de dados \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   120                                   \{\par
  121     \par
  122     char buff_nome[BUFSIZ];\par
  123     printf("NOME\\n(\\"!\\" para mais informacoes ou * para cancelar)\\nInforme o nome: ");\par
  124     \par
  125     fgets(buff_nome, BUFSIZ, stdin);\par
  126     strtok(buff_nome, "\\n");\par
  127     \par
  128     while (!strcmp(buff_nome, "!") || strlen(buff_nome) > 99) \{\par
  129         printf("\\nInformar o nome eh obrigatorio;\\nEvite acentos ortograficos\\nSe e"\par
  130                 " somente se desejar cacelar insira somente \\"*\\" ( caso contrario n\'C3\'A3o "\par
  131                 "use esse caractere. Use no maximo 100 caracteres;\\n");\par
  132         printf("\\nInforme o nome (\\"!\\" para mais informacoes): ");\par
  133         fgets(buff_nome, BUFSIZ, stdin);\par
  134         strtok(nome, "\\n");\par
  135     \}\par
  136     \par
  137     strcpy(nome, buff_nome);   \par
  138 \}\par
}
}
{\xe \v adquirir_twitter\:funcoes_agenda.h}
{\xe \v funcoes_agenda.h\:adquirir_twitter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void adquirir_twitter (char  {\i twitter}[16])}}
\par
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b adquirir_celular(char celular[12])}: Manpula a string celular de mod a preenchela com um valor valido para celular ou com "" se o usuario optar por pular \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   216                                        \{ /*Adquire um twitter nickname e o retorna*/\par
  217     strcpy(twitter, "");\par
  218     char buf[BUFSIZ] = "                ";\par
  219     printf("\\nTWITTER");\par
  220     while (strlen(buf) > 15)\{\par
  221         printf("\\nTwitter nick name (15 caracteres) ou apenas ENTER para pular: ");\par
  222         fgets(buf, BUFSIZ, stdin);\par
  223         if (!strcmp(buf, "\\n")) return;\par
  224         strtok(buf, "\\n");\par
  225     \}\par
  226     strcpy(twitter, buf);    \par
  227 \}\par
}
}
{\xe \v alocar_contato\:funcoes_agenda.h}
{\xe \v funcoes_agenda.h\:alocar_contato}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void alocar_contato ({\b s_contato}  {\i vetor_agenda}[SIZE], {\b s_contato}  {\i contato})}}
\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b adquirir_facebook(char facebook[30])}: preenche facebook com um valor valido para o facebook ou com "" se o usuario optar por pular \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   242                                                                      \{\par
  243     int i, j;\par
  244     char temp_cont[100], temp_agenda[100];\par
  245     for ( i = SIZE - 1; i > 0 ; i-- ) \{\par
  246         strcpy(temp_cont, contato.nome);\par
  247         strcpy(temp_agenda, vetor_agenda[i-1].nome);\par
  248         for (j = 0; j < strlen(temp_cont); j++)\{\par
  249             if (isalpha(temp_cont[j]) && islower(temp_cont[j]))\{\par
  250                 temp_cont[j] = toupper(temp_cont[j]);\par
  251                 temp_agenda[j] = toupper(temp_agenda[j]);\par
  252             \}\par
  253         \}\par
  254         if (strcmp(temp_cont, temp_agenda) >= 0 && strcmp(temp_agenda, "")) \{\par
  255             vetor_agenda[i] = contato;\par
  256             break;\par
  257         \}        \par
  258         vetor_agenda[i] = vetor_agenda[i-1];\par
  259     \}\par
  260     \par
  261     if (i == 0) \{\par
  262         vetor_agenda[i] = contato;\par
  263     \}\par
  264     \par
  265 \}\par
}
}
{\xe \v alterar_pelo_nome\:funcoes_agenda.h}
{\xe \v funcoes_agenda.h\:alterar_pelo_nome}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void alterar_pelo_nome ({\b s_contato}  {\i vetor_agenda}[SIZE])}}
\par
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b excluir_pelo_nome(s_contato vetor_agenda[SIZE])}: Fun\'C3\'A7\'C3\'A3o para excluir um contato a partir do nome. seguindo o nome fornecido pelo usuario ela fornece quais as possibilidade de exclus\'C3\'A3o, o usuario pode ent\'C3\'A3o optar por cancelar, excluir todas as entradas compativeis, ou s\'C3\'B3 a desejada \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   391                                                      \{\par
  392     printf("Alterar dados a partir do nome:\\n");\par
  393     int teste, i, chave_i = -1, chave_j = -1, q = 0;\par
  394     char buf_nome[100];\par
  395     adquirir_nome(buf_nome);\par
  396     if (!strcmp(buf_nome, "*")) return;\par
  397     for (i = 0; i < SIZE; i++) \{\par
  398         if (!strcmp(buf_nome,vetor_agenda[i].nome)) \{\par
  399             if (chave_i == -1) \{\par
  400                 chave_i = i;\par
  401                 chave_j = i;\par
  402             \}\par
  403             if (chave_i != -1) chave_j = i;\par
  404             q++;\par
  405         \}\par
  406     \}\par
  407     printf("\\n%d entradas correspondentes:\\n", q);\par
  408     \par
  409     if (q > 0) \{\par
  410         mostrar_agenda_nome(vetor_agenda, chave_i, chave_j+1);\par
  411     \} else \{\par
  412         printf("\\nNenhum contato correspondente para ser editado!\\n");\par
  413         return;\par
  414     \}\par
  415     char opcao[BUFSIZ];\par
  416     while(1)\{\par
  417         teste = 0;\par
  418         printf("-> -1 para cancelar\\n"\par
  419             "-> maior que zero para editar o contato indicado (EX:"\par
  420             " 1 para editar o primeiro contato correspondente)\\nOpcao desejada: ");\par
  421         fgets(opcao, BUFSIZ, stdin);\par
  422         strtok(opcao, "\\n");\par
  423         i = 0;\par
  424         if (!strcmp(opcao, "-1"))\{\par
  425             printf("CANCELADO\\n\\n");\par
  426             return;\par
  427         \}\par
  428         while (opcao[i] != '\\0') \{\par
  429             if(!isdigit(opcao[i]))\{\par
  430                 printf("OPCAO INVALIDA!\\n");\par
  431                 teste = 1;\par
  432                 break;\par
  433             \}\par
  434             i++;\par
  435         \}\par
  436         if (teste) continue;\par
  437         if (atoi(opcao) >= -1 && atoi(opcao) != 0 && atoi(opcao) <= q) break;\par
  438         printf("%d", atoi(opcao));\par
  439         printf("OPCAO INVALIDA!\\n");\par
  440     \}\par
  441     \par
  442     chave_i += atoi(opcao) - 1;\par
  443     char alterar[BUFSIZ];\par
  444     s_contato hold;\par
  445     \par
  446     printf("\\nAlterar o nome?\\n"\par
  447            "somente ENTER para alterar; qualquer outra entrada para manter: ");\par
  448     if(!strcmp(fgets(alterar, BUFSIZ, stdin), "\\n")) \{\par
  449         adquirir_nome(hold.nome);\par
  450         if (!strcmp(hold.nome, "*")) \{ \par
  451             printf("\\nalteracao cancelada\\n");\par
  452             return;\par
  453         \}\par
  454         strcpy(vetor_agenda[chave_i].nome, hold.nome);\par
  455     \}\par
  456     printf("\\nAlterar data de aniversario?\\n"\par
  457            "somente ENTER para alterar; qualquer outra entrada para manter: ");\par
  458     if(!strcmp(fgets(alterar, BUFSIZ, stdin), "\\n")) \{\par
  459         adquirir_data(hold.data);\par
  460         strcpy(vetor_agenda[chave_i].data, hold.data);\par
  461     \}\par
  462     printf("\\nAlterar o celular?\\n"\par
  463            "somente ENTER para alterar; qualquer outra entrada para manter: ");\par
  464     if(!strcmp(fgets(alterar, BUFSIZ, stdin), "\\n")) \{\par
  465         adquirir_celular(hold.celular);\par
  466         strcpy(vetor_agenda[chave_i].celular, hold.celular);\par
  467     \}\par
  468     printf("\\nAlterar o Twitter?\\n"\par
  469            "somente ENTER para alterar; qualquer outra entrada para manter: ");\par
  470     if(!strcmp(fgets(alterar, BUFSIZ, stdin), "\\n")) \{\par
  471         adquirir_celular(hold.twitter);\par
  472         strcpy(vetor_agenda[chave_i].twitter, hold.twitter);\par
  473     \}\par
  474     printf("\\nAlterar o Facebook?\\n"\par
  475            "somente ENTER para alterar; qualquer outra entrada para manter: ");\par
  476     if(!strcmp(fgets(alterar, BUFSIZ, stdin), "\\n")) \{\par
  477         adquirir_celular(hold.facebook);\par
  478         strcpy(vetor_agenda[chave_i].facebook, hold.facebook);\par
  479     \}\par
  480     //agrupar as altera\'C3\'A7\'C3\'B5es em u mrepositorio\par
  481     strcpy(hold.nome, vetor_agenda[chave_i].nome);\par
  482     strcpy(hold.data, vetor_agenda[chave_i].data);\par
  483     strcpy(hold.celular, vetor_agenda[chave_i].celular);\par
  484     strcpy(hold.twitter, vetor_agenda[chave_i].twitter);\par
  485     strcpy(hold.facebook, vetor_agenda[chave_i].facebook);\par
  486     \par
  487     //apagar o contato alterado da agenda para que ele seja reinserido no local correto\par
  488     for (i = chave_i; (i < SIZE - 1) && strcmp(vetor_agenda[i].nome, "") ; i++) \{\par
  489         strcpy(vetor_agenda[i].nome, vetor_agenda[i + 1].nome);\par
  490         strcpy(vetor_agenda[i].data, vetor_agenda[i + 1].data);\par
  491         strcpy(vetor_agenda[i].celular, vetor_agenda[i + 1].celular);\par
  492         strcpy(vetor_agenda[i].facebook, vetor_agenda[i + 1].facebook);\par
  493         strcpy(vetor_agenda[i].twitter, vetor_agenda[i + 1].twitter);\par
  494     \}\par
  495     strcpy(vetor_agenda[SIZE - 1].nome, "");\par
  496     strcpy(vetor_agenda[SIZE - 1].data, "");\par
  497     strcpy(vetor_agenda[SIZE - 1].celular, "");\par
  498     strcpy(vetor_agenda[SIZE - 1].facebook, "");\par
  499     strcpy(vetor_agenda[SIZE - 1].twitter, "");\par
  500     printf("\\n");\par
  501 \par
  502     //realocar  o contato\par
  503     alocar_contato(vetor_agenda, hold);\par
  504     \par
  505 \}\par
}
}
{\xe \v aniversariantes_data\:funcoes_agenda.h}
{\xe \v funcoes_agenda.h\:aniversariantes_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void aniversariantes_data ({\b s_contato}  {\i vetor_agenda}[SIZE])}}
\par
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b consultar_aniversariantes(s_contato vetor_agenda[SIZE], char dia[3], char mes[3])}: Exibe os aniversariantes do dia e mes desejado ou somente do mes se o dia informado for for "00" \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   521                                                         \{\par
  522     printf("Consultar aniversariantes de uma data (dia/mes)\\n");\par
  523     char data[6] = "";\par
  524     adquirir_data(data);\par
  525     if (!strcmp(data, "")) \{\par
  526         printf("\\nConsulta cancelada!\\n");\par
  527         return;\par
  528     \}\par
  529     char dia[3], mes[3];\par
  530     strncpy(dia, data, 2);\par
  531     dia[2] = '\\0';\par
  532     strcpy(mes, data + 3);\par
  533     \par
  534     printf("\\nAniversariantes do dia %s:\\n", data);\par
  535     \par
  536     consultar_aniversariantes(vetor_agenda, dia, mes);\par
  537     \par
  538 \}\par
}
}
{\xe \v aniversariantes_inicial\:funcoes_agenda.h}
{\xe \v funcoes_agenda.h\:aniversariantes_inicial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void aniversariantes_inicial ({\b s_contato}  {\i vetor_agenda}[SIZE])}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b aniversariantes_mes(s_contato vetor_agenda[SIZE])}: Consulta os aniversariantes de um m\'C3\'AAs no formato mm, obtendo o m\'C3\'AAs do usuario e usando na fun\'C3\'A7\'C3\'A3o void {\b consultar_aniversariantes(s_contato vetor_agenda[SIZE], char dia[3], char mes[3])} com dia = "00" \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   552                                                            \{\par
  553     int i, qaniver = 0;\par
  554     char inicial[BUFSIZ], chave1, chave2;\par
  555     printf("Consultar aniversariantes pela letra inicial do nome\\n\\n"\par
  556             "Informe um caractere para procurar como inicial, ou qualquer outra entrada para sair: ");\par
  557     fgets(inicial, BUFSIZ, stdin);\par
  558     strtok(inicial, "\\n");\par
  559     if (strlen(inicial) == 1) \{\par
  560         chave1 = toupper(inicial[0]);\par
  561         for (i = 0; i < SIZE; i++) \{\par
  562             chave2 = toupper(vetor_agenda[i].nome[0]);\par
  563             if (chave1 == chave2) \{\par
  564                 qaniver++;\par
  565                 printf("\\n%s - %s", vetor_agenda[i].nome, vetor_agenda[i].data);\par
  566                 if (!strcmp(vetor_agenda[i].data, "")) printf("data de anviersario desconhecida");\par
  567             \}\par
  568         \}\par
  569         printf("\\n\\n%d entradas correspondentes\\n\\n", qaniver);\par
  570     \}\par
  571 \}\par
}
}
{\xe \v aniversariantes_mes\:funcoes_agenda.h}
{\xe \v funcoes_agenda.h\:aniversariantes_mes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void aniversariantes_mes ({\b s_contato}  {\i vetor_agenda}[SIZE])}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b aniversariantes_data(s_contato vetor_agenda[SIZE])}: Consulta os aniversariantes de uma data no formato dd/mm, obtendo a data do usuario e usando na fun\'C3\'A7\'C3\'A3o void {\b consultar_aniversariantes(s_contato vetor_agenda[SIZE], char dia[3], char mes[3])} \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   540                                                        \{\par
  541     char mes[BUFSIZ];\par
  542     printf("Consultar aniversariantes por mes\\n\\nInforme o mes no formato mm "\par
  543             "(ex: 05)\\nou qualquer outra entrada para cancelar:");\par
  544     fgets(mes, BUFSIZ, stdin);\par
  545     strtok(mes, "\\n");\par
  546     if (isdigit(mes[0]) && isdigit(mes[1]) && mes[2] == '\\0' && atoi(mes) > 0 && atoi(mes) < 13) \{\par
  547         printf("\\nAniversariantes do mes:\\n");\par
  548         consultar_aniversariantes(vetor_agenda, "00", mes);\par
  549     \}\par
  550 \}\par
}
}
{\xe \v cadastrar\:funcoes_agenda.h}
{\xe \v funcoes_agenda.h\:cadastrar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void cadastrar ({\b s_contato}  {\i vetor_agenda}[SIZE])}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void ler_agenda(s_contato vetor_agenda[SIZE]) que l\'C3\'AA o arquivo contendo os dados da agenda e manipula o vetor de contatos passado como referencia de forma a preenche-lo com os dados armazenados no txt da agenda. Se o arquivo agenda.txt ainda n\'C3\'A3o existir, preenche os elementos do vetor de contatos com "" \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    85                                             \{\par
   86     printf("Cadastrar pessoa na agenda de contatos\\n\\n");\par
   87     if (strcmp(vetor_agenda[SIZE - 1].nome, "")) \{\par
   88         printf("A agenda est\'C3\'A1 cheia\\n\\n");\par
   89     \} else \{\par
   90         s_contato hold;\par
   91         adquirir_nome(hold.nome);\par
   92         if (!strcmp(hold.nome, "*")) \{ return;\}\par
   93         adquirir_data(hold.data);\par
   94         adquirir_celular(hold.celular);\par
   95         adquirir_twitter(hold.twitter);\par
   96         adquirir_facebook(hold.facebook);\par
   97         \par
   98         printf("\\nDados Recebidos:\\n");\par
   99         printf("nome -> %s\\n", hold.nome);\par
  100         printf("data de aniversario -> %s\\n", hold.data);\par
  101         printf("celular -> %s\\n", hold.celular);\par
  102         printf("twitter -> %s\\n", hold.twitter);\par
  103         printf("facebook -> %s\\n", hold.facebook);\par
  104         \par
  105         char confirmar[BUFSIZ];\par
  106         printf("Enter para confirmar (Qualquer outra entrada para cancelar): ");\par
  107         fgets(confirmar, BUFSIZ, stdin);\par
  108         if (strcmp(confirmar, "\\n"))\{\par
  109             printf("CANCELADO!\\n\\n");\par
  110             return;\par
  111         \}\par
  112         printf("CONFIRMADO!\\n\\n");\par
  113         \par
  114         alocar_contato(vetor_agenda, hold);\par
  115         \par
  116         \par
  117     \}\par
  118 \}\par
}
}
{\xe \v clear\:funcoes_agenda.h}
{\xe \v funcoes_agenda.h\:clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void clear (void )}}
\par
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b s_contato} - Armazena os dados dos contatos Prot\'C3\'B3tipos das Fun\'C3\'A7\'C3\'B5es \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     4                   \{    \par
    5   while ( getchar() != '\\n' );\par
    6 \}\par
}
}
{\xe \v consultar_aniversariantes\:funcoes_agenda.h}
{\xe \v funcoes_agenda.h\:consultar_aniversariantes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void consultar_aniversariantes ({\b s_contato}  {\i vetor_agenda}[SIZE], char  {\i dia}[3], char  {\i mes}[3])}}
\par
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b alterar_pelo_nome(s_contato vetor_agenda[SIZE])}: Fun\'C3\'A7\'C3\'A3o para editar um contato a partir do nome. seguindo o nome fornecido pelo usuario ela fornece quais as possibilidade de edi\'C3\'A7\'C3\'A3o, o usuario pode ent\'C3\'A3o optar por cancelar ou editar somente a entrada desejada. A edi\'C3\'A7\'C3\'A3o permite que o usuario altere apenas as partes que quiser alterar do contato escolhido \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   507                                                                                        \{\par
  508     int i, qaniver = 0;\par
  509     int dia_switch;\par
  510     if (!strcmp(dia, "00")) dia_switch = 1; // TRUE\par
  511     for (i=0; i<SIZE; i++) \{\par
  512         if ( (!strncmp(vetor_agenda[i].data,dia,2) || dia_switch) && !strcmp(vetor_agenda[i].data + 3, mes)) \{\par
  513             qaniver++;\par
  514             printf("\\n%s\\n%s | %s | %s | %s\\n", vetor_agenda[i].nome, vetor_agenda[i].data,\par
  515                 vetor_agenda[i].celular, vetor_agenda[i].twitter, vetor_agenda[i].facebook);\par
  516         \}\par
  517     \}\par
  518     printf("\\n%d aniversariantes correspondentes\\n\\n", qaniver);\par
  519 \}\par
}
}
{\xe \v excluir_pelo_nome\:funcoes_agenda.h}
{\xe \v funcoes_agenda.h\:excluir_pelo_nome}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void excluir_pelo_nome ({\b s_contato}  {\i vetor_agenda}[SIZE])}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
int {\b gravar(s_contato vetor_agenda[SIZE])}: grava os dados do vetor de contatos em um arquivo chamado de agenda.txt, de forma compativel co ma fun\'C3\'A7\'C3\'A3o de leitura void {\b ler_agenda_arquivo(s_contato vetor_agenda[SIZE])} \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   304                                                     \{\par
  305     printf("\\n\\nExcluir pessoa a partir do nome:\\n");\par
  306     int teste, i, chave_i = -1, chave_j = -1, q = 0;\par
  307     char buf_nome[100];\par
  308     adquirir_nome(buf_nome);\par
  309     if (!strcmp(buf_nome, "*")) return;\par
  310     for (i = 0; i < SIZE; i++) \{\par
  311         if (!strcmp(buf_nome,vetor_agenda[i].nome)) \{\par
  312             if (chave_i == -1) \{\par
  313                 chave_i = i;\par
  314                 chave_j = i;\par
  315             \}\par
  316             if (chave_i != -1) chave_j = i;\par
  317             q++;\par
  318         \}\par
  319     \}\par
  320     printf("\\n%d entradas correspondentes:\\n", q);\par
  321     \par
  322     if (q > 0) \{\par
  323         mostrar_agenda_nome(vetor_agenda, chave_i, chave_j+1);\par
  324     \} else \{\par
  325         printf("\\nNenhum contato correspondente para ser apagado!\\n");\par
  326         return;\par
  327     \}\par
  328     char opcao[BUFSIZ];\par
  329     while(1)\{\par
  330         teste = 0;\par
  331         printf("\\n-> -1 para cancelar\\n"\par
  332             "-> 0 para apagar todas as entradas correspondentes\\n"\par
  333             "-> maior que zero para apagar o contato correspondente desejado (EX: 1 para apaagr o primeiro contato com nome igual)\\n"\par
  334             "Opcao desejada: ");\par
  335         fgets(opcao, BUFSIZ, stdin);\par
  336         strtok(opcao, "\\n");\par
  337         i = 0;\par
  338         if (!strcmp(opcao, "-1"))\{\par
  339             printf("CANCELADO\\n\\n");\par
  340             return;\par
  341         \}\par
  342         while (opcao[i] != '\\0') \{\par
  343             if(!isdigit(opcao[i]))\{\par
  344                 printf("OPCAO INVALIDA!\\n");\par
  345                 teste = 1;\par
  346                 break;\par
  347             \}\par
  348             i++;\par
  349         \}\par
  350         if (teste) continue;\par
  351         if (atoi(opcao) >= -1 && atoi(opcao) <= q) break;\par
  352         printf("%d", atoi(opcao));\par
  353         printf("OPCAO INVALIDA!\\n");\par
  354     \}\par
  355     \par
  356     printf("\\n");\par
  357 \par
  358     if (atoi(opcao) > 0) \{\par
  359         chave_i += atoi(opcao) - 1;\par
  360         for (i = chave_i; (i < SIZE - 1) && strcmp(vetor_agenda[i].nome, "") ; i++) \{\par
  361             strcpy(vetor_agenda[i].nome, vetor_agenda[i + 1].nome);\par
  362             strcpy(vetor_agenda[i].data, vetor_agenda[i + 1].data);\par
  363             strcpy(vetor_agenda[i].celular, vetor_agenda[i + 1].celular);\par
  364             strcpy(vetor_agenda[i].facebook, vetor_agenda[i + 1].facebook);\par
  365             strcpy(vetor_agenda[i].twitter, vetor_agenda[i + 1].twitter);\par
  366         \}\par
  367         strcpy(vetor_agenda[SIZE - 1].nome, "");\par
  368         strcpy(vetor_agenda[SIZE - 1].data, "");\par
  369         strcpy(vetor_agenda[SIZE - 1].celular, "");\par
  370         strcpy(vetor_agenda[SIZE - 1].facebook, "");\par
  371         strcpy(vetor_agenda[SIZE - 1].twitter, "");\par
  372     \} else if (atoi(opcao) == 0) \{\par
  373         for (i = chave_i; (i < SIZE - q) && strcmp(vetor_agenda[i].nome, "") ; i++) \{\par
  374             strcpy(vetor_agenda[i].nome, vetor_agenda[i + q].nome);\par
  375             strcpy(vetor_agenda[i].data, vetor_agenda[i + q].data);\par
  376             strcpy(vetor_agenda[i].celular, vetor_agenda[i + q].celular);\par
  377             strcpy(vetor_agenda[i].facebook, vetor_agenda[i + q].facebook);\par
  378             strcpy(vetor_agenda[i].twitter, vetor_agenda[i + q].twitter);\par
  379         \}\par
  380         for (i = SIZE - 1; i > SIZE - 1 - q; i--) \{\par
  381             strcpy(vetor_agenda[SIZE - 1].nome, "");\par
  382             strcpy(vetor_agenda[SIZE - 1].data, "");\par
  383             strcpy(vetor_agenda[SIZE - 1].celular, "");\par
  384             strcpy(vetor_agenda[SIZE - 1].facebook, "");\par
  385             strcpy(vetor_agenda[SIZE - 1].twitter, "");\par
  386         \}\par
  387     \}\par
  388     \par
  389 \}\par
}
}
{\xe \v gravar\:funcoes_agenda.h}
{\xe \v funcoes_agenda.h\:gravar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int gravar ({\b s_contato}  {\i vetor_agenda}[SIZE])}}
\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b mostrar_agenda_nome(s_contato vetor_agenda[SIZE], int a, int b)}: mostra os contatos presentes na agenda, n\'C3\'A3o vazios, na ordem em que est\'C3\'A3o posicionados na agenda \par
}}
{\xe \v ler_agenda_arquivo\:funcoes_agenda.h}
{\xe \v funcoes_agenda.h\:ler_agenda_arquivo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ler_agenda_arquivo ({\b s_contato}  {\i vetor_agenda}[SIZE])}}
\par
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
int {\b menu()}: que oferece o menu e pede que seja escolhida uma op\'C3\'A7\'C3\'A3o, retorna um inteiro equivalente a op\'C3\'A3o escolhida se a entrada for coerente com as op\'C3\'A7\'C3\'B5es, caso contrario retorna 0 \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    35                                                      \{\par
   36     int i, contador = 0;\par
   37     FILE *fPtr;\par
   38     if ( ( fPtr = fopen("agenda.txt", "r") ) == NULL) \{\par
   39         printf("N\'C3\'A3o foi poss\'C3\'ADvel abrir o arquivo da agenda, ou ela est\'C3\'A1 vazia!\\n\\n");\par
   40         for (i = 0; i < SIZE; i++) \{\par
   41             strcpy(vetor_agenda[i].nome, "");\par
   42             strcpy(vetor_agenda[i].data, "");\par
   43             strcpy(vetor_agenda[i].celular, "");\par
   44             strcpy(vetor_agenda[i].facebook, "");\par
   45             strcpy(vetor_agenda[i].twitter, "");\par
   46         \}\par
   47     \} else \{\par
   48         char segura_linha[170];\par
   49         while (!feof(fPtr)) \{\par
   50             fgets(segura_linha, 100, fPtr);\par
   51             strtok(segura_linha, "\\n");\par
   52             strcpy(vetor_agenda[contador].nome, segura_linha);\par
   53             fgets(segura_linha, 100, fPtr);\par
   54             if(!strcmp(segura_linha,"\\n")) strcpy(segura_linha,"");\par
   55             else strtok(segura_linha, "\\n");\par
   56             strcpy(vetor_agenda[contador].data, segura_linha);\par
   57             fgets(segura_linha, 100, fPtr);\par
   58             if(!strcmp(segura_linha,"\\n")) strcpy(segura_linha,"");\par
   59             else strtok(segura_linha, "\\n");\par
   60             strcpy(vetor_agenda[contador].celular, segura_linha); \par
   61             fgets(segura_linha, 100, fPtr);\par
   62             if(!strcmp(segura_linha,"\\n")) strcpy(segura_linha,"");\par
   63             else strtok(segura_linha, "\\n");\par
   64             strcpy(vetor_agenda[contador].twitter, segura_linha);\par
   65             fgets(segura_linha, 100, fPtr);\par
   66             if(!strcmp(segura_linha,"\\n")) strcpy(segura_linha,"");\par
   67             else strtok(segura_linha, "\\n");\par
   68             strcpy(vetor_agenda[contador].facebook, segura_linha);\par
   69             strcpy(segura_linha, "");\par
   70             contador += 1;\par
   71             \par
   72 \par
   73         \}\par
   74         for (i = contador + 1; i < SIZE; i++) \{\par
   75             strcpy(vetor_agenda[i].nome, "");\par
   76             strcpy(vetor_agenda[i].data, "");\par
   77             strcpy(vetor_agenda[i].celular, "");\par
   78             strcpy(vetor_agenda[i].facebook, "");\par
   79             strcpy(vetor_agenda[i].twitter, "");\par
   80         \} \par
   81     \}\par
   82     fclose(fPtr);\par
   83 \}\par
}
}
{\xe \v menu\:funcoes_agenda.h}
{\xe \v funcoes_agenda.h\:menu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int menu ()}}
\par
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b clear(void)}: limpa o buffer da stdin ap\'C3\'B3s o uso de um scanf, acabou n\'C3\'A3o sendo usada \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     8           \{\par
    9     \par
   10     int valor;\par
   11     \par
   12     printf("-----------------------------------------------------------------------------------------------------\\n"\par
   13             "MENU:\\n"\par
   14             "1 - Cadastrar pessoa na agenda de contato (Nome, Dia de aniversario, Celular, Twitter e facebook)\\n"\par
   15             "2 - Excluir pessoa a partir do nome\\n"\par
   16             "3 - Alterar dados a partir do nome\\n"\par
   17             "4 - Consultar aniversariantes de uma data (dia e m\'C3\'AAs)\\n"\par
   18             "5 - Consultar aniversariantes por mes\\n"\par
   19             "6 - Consultar aniversariantes pela letra inicial do nome\\n"\par
   20             "7 - Mostrar toda a agenda ordenada pelo nome\\n"\par
   21             "8 - Mostrar toda a agenda ordenada por mes\\n"\par
   22             "9 - Sair\\n"\par
   23             "\\nOpcao desejada: ");\par
   24     \par
   25     char buf_opcao[BUFSIZ];\par
   26     fgets(buf_opcao, BUFSIZ, stdin);\par
   27     strtok(buf_opcao, "\\n");\par
   28     \par
   29     printf("----------------------------------------------------------------------------------------------------\\n\\n");\par
   30     \par
   31     if (strlen(buf_opcao) == 1) return (buf_opcao[0] - '0');\par
   32     else return 0;\par
   33 \}\par
}
}
{\xe \v mostrar_agenda_mes\:funcoes_agenda.h}
{\xe \v funcoes_agenda.h\:mostrar_agenda_mes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mostrar_agenda_mes ({\b s_contato}  {\i vetor_agenda}[SIZE])}}
\par
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b aniversariantes_inicial(s_contato vetor_agenda[SIZE])}: Pede ao usuario uma inicial e exibe todos os nomes que come\'C3\'A7am naquela inicial junto as suas respectivas datas de aniversarios, e avisa se as datas forem desconhecidas \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   573                                                       \{\par
  574     \par
  575     s_contato temp[SIZE],hold;\par
  576     int i, j, key1, key2;\par
  577     \par
  578     for (i = 0; i < SIZE; i++ ) \{\par
  579         temp[i] = vetor_agenda[i];\par
  580     \}\par
  581     for (i = 0; i < SIZE - 1; i++) \{\par
  582         for ( j = 0 ; j < SIZE - 1 - i; j++) \{\par
  583             key1 = atoi(temp[j].data + 3);\par
  584             key2 = atoi(temp[j+1].data + 3);\par
  585             if (key2 < key1) \{\par
  586                 hold = temp[j];\par
  587                 temp[j] = temp[j+1];\par
  588                 temp[j+1] = hold;\par
  589             \}\par
  590         \}\par
  591     \}\par
  592     for (i = 0; i < SIZE; i++) \{\par
  593         if (strcmp(temp[i].nome,"")) \{\par
  594             printf("\\n%s\\n%s | %s | %s | %s\\n", temp[i].nome, temp[i].data,\par
  595                     temp[i].celular, temp[i].twitter, temp[i].facebook);\par
  596         \}\par
  597     \}\par
  598 \}}
}
{\xe \v mostrar_agenda_nome\:funcoes_agenda.h}
{\xe \v funcoes_agenda.h\:mostrar_agenda_nome}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void mostrar_agenda_nome ({\b s_contato}  {\i vetor_agenda}[SIZE], int  {\i a}, int  {\i b})}}
\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
void {\b alocar_contato(s_contato vetor_agenda[SIZE], s_contato contato)}: Aloca contato na sua devida posi\'C3\'A7\'C3\'A3o lexica dentro de vetor-agenda; Comportamento indefinido caso vetor_agenda ja esteja cheia \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   267                                                                     \{\par
  268     int i;\par
  269     printf("\\nAgenda ordenada pelo nome\\n\\n"\par
  270             "Nome\\ndata de aniversario - celular - twitter - facebook\\n");\par
  271     for (i = a; i < b && strcmp(vetor_agenda[i].nome, ""); i++)\{\par
  272         printf("\\n%s\\n%s | %s | %s | %s\\n", vetor_agenda[i].nome, vetor_agenda[i].data,\par
  273                 vetor_agenda[i].celular, vetor_agenda[i].twitter, vetor_agenda[i].facebook);\par
  274     \}\par
  275     printf("\\n");\par
  276 \}\par
}
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \'CDndice\par 
\pard\plain 
{\tc \v \'CDndice}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}